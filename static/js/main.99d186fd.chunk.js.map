{"version":3,"sources":["Layout/Topbar.js","Layout/TextInput.js","Components/AddItem.js","Components/Item.js","Components/ItemList.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","react_default","a","createElement","className","href","TextInput","_ref","label","name","type","onChange","value","id","htmlFor","AddItem","state","item","price","store","error","onSubmit","e","preventDefault","_this$state","_this","test","newItem","uuid","checked","props","setState","update","Object","defineProperty","target","_this$state2","this","bind","Layout_TextInput","Component","Item","checkItemOff","setTimeout","currentItems","JSON","parse","localStorage","getItem","forEach","setItem","stringify","deleteItem","length","newItems","filter","_this$props$item","priceSection","groceryGet","onClick","groceryCart","Fragment","ItemList","items","map","Components_Item","key","App","buildLocalStorage","toLocalStorage","concat","toConsumableArray","updateItems","retrievedItems","Layout_Topbar","Components_AddItem","Components_ItemList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQAmBeA,EAjBA,WACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,0CAAtB,iBAEEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAAb,kBAEFH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,wCAAtB,KAEEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,6BCKKE,EAfG,SAAAC,GAA4C,IAAzCC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,KAAMC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,MAChD,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEU,GAAIJ,EACJC,KAAMA,EACND,KAAMA,EACNG,MAAOA,EACPD,SAAUA,IAEZV,EAAAC,EAAAC,cAAA,SAAOW,QAASL,GAAOD,sBCsFdO,6MA7FbC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,MAGTC,SAAW,SAAAC,GACTA,EAAEC,iBADY,IAAAC,EAEiBC,EAAKT,MAA5BC,EAFMO,EAENP,KAAMC,EAFAM,EAEAN,MAAOC,EAFPK,EAEOL,MACrB,GAAa,KAATF,EAAJ,CAOA,GAFgB,qBAEDS,KAAKR,GAApB,CAKA,IAAMS,EAAU,CACdd,GAAIe,MACJX,OACAC,QACAC,QACAU,SAAS,GAGXJ,EAAKK,MAAMX,MAAMQ,GAEjBF,EAAKM,SAAS,CACZd,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,KAGTK,EAAKK,MAAME,cArBTP,EAAKM,SAAS,CAAEX,MAAO,8BAPvBK,EAAKM,SAAS,CAAEX,MAAO,yBA+B3BT,SAAW,SAAAW,GACTG,EAAKM,SAALE,OAAAC,EAAA,EAAAD,CAAA,GAAiBX,EAAEa,OAAO1B,KAAOa,EAAEa,OAAOvB,iFAGnC,IAAAwB,EAC+BC,KAAKrB,MAAnCC,EADDmB,EACCnB,KAAMC,EADPkB,EACOlB,MAAOC,EADdiB,EACcjB,MAAOC,EADrBgB,EACqBhB,MAC5B,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,YACAH,EAAAC,EAAAC,cAAA,QAAMkB,SAAUgB,KAAKhB,SAASiB,KAAKD,OACjCpC,EAAAC,EAAAC,cAACoC,EAAD,CACE/B,MAAM,OACNC,KAAK,OACLC,KAAK,OACLE,MAAOK,EACPN,SAAU0B,KAAK1B,WAEjBV,EAAAC,EAAAC,cAACoC,EAAD,CACE/B,MAAM,UACNC,KAAK,QACLC,KAAK,OACLE,MAAOM,EACPP,SAAU0B,KAAK1B,WAEjBV,EAAAC,EAAAC,cAACoC,EAAD,CACE/B,MAAM,QACNC,KAAK,QACLC,KAAK,OACLE,MAAOO,EACPR,SAAU0B,KAAK1B,WAEhBS,GAASnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYgB,GACnCnB,EAAAC,EAAAC,cAAA,UACEC,UAAU,mDACVM,KAAK,SACLE,MAAM,YAENX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,6BAnFIoC,aCoGPC,oNArGbC,aAAe,WAYbC,WAXmB,WAAM,IACf9B,EAAOY,EAAKK,MAAMb,KAAlBJ,GACF+B,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,UACrDJ,EAAaK,QAAQ,SAAAhC,GACfA,EAAKJ,KAAOA,IACdI,EAAKY,SAAWZ,EAAKY,WAGzBkB,aAAaG,QAAQ,QAASL,KAAKM,UAAUP,IAC7CnB,EAAKK,MAAME,UAEU,QAEzBoB,WAAa,WAYXT,WAXmB,WAAM,IACf9B,EAAOY,EAAKK,MAAMb,KAAlBJ,GACF+B,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,UACrD,GAA4B,IAAxBJ,EAAaS,OACfN,aAAaG,QAAQ,QAAS,UACzB,CACL,IAAMI,EAAWV,EAAaW,OAAO,SAAAtC,GAAI,OAAIA,EAAKJ,KAAOA,IACzDkC,aAAaG,QAAQ,QAASL,KAAKM,UAAUG,IAE/C7B,EAAKK,MAAME,UAEU,8EAEhB,IAAAwB,EACiCnB,KAAKP,MAAMb,KAA3CA,EADDuC,EACCvC,KAAMC,EADPsC,EACOtC,MAAOC,EADdqC,EACcrC,MAAOU,EADrB2B,EACqB3B,QAKtB4B,EACJxD,EAAAC,EAAAC,cAAA,SACGe,GACCjB,EAAAC,EAAAC,cAAA,YANa,IAQVe,GAEF,IACFC,GACClB,EAAAC,EAAAC,cAAA,UACG,IAZA,IAWH,IAEUgB,IAMVuC,EACJzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,qEACVuD,QAAStB,KAAKK,cAFhB,qBAMAzC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAsBa,GACrCwC,EACDxD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,KACEC,UAAU,gCACVuD,QAAStB,KAAKe,YAFhB,YAUAQ,EACJ3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yCACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,qEACVuD,QAAStB,KAAKK,cAFhB,wBAMAzC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,SAAIc,IAELwC,EACDxD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,KACEC,UAAU,gCACVuD,QAAStB,KAAKe,YAFhB,YAUN,OACEnD,EAAAC,EAAAC,cAACF,EAAAC,EAAM2D,SAAP,KAAiBhC,EAAU+B,EAAcF,UAjG5BlB,cCsBJsB,mLApBJ,IAAArC,EAAAY,KACC0B,EAAU1B,KAAKP,MAAMiC,MAArBA,MACR,OACE9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,SAED2D,GACCA,EAAMC,IAAI,SAAA/C,GAAI,OACZhB,EAAAC,EAAAC,cAAC8D,EAAD,CAAMC,IAAKjD,EAAKJ,GAAII,KAAMA,EAAMe,OAAQP,EAAKK,MAAME,qBAZ5CQ,aC8CR2B,6MA1CbnD,MAAQ,KAERoD,kBAAoB,WACGvB,KAAKC,MAAMC,aAAaC,QAAQ,WAEnDD,aAAaG,QAAQ,QAAS,SAGlCmB,eAAiB,SAAApD,GACf,IAAM2B,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,UAC/CM,EAAQ,GAAAgB,OAAArC,OAAAsC,EAAA,EAAAtC,CAAOW,GAAP,CAAqB3B,IACnC8B,aAAaG,QAAQ,QAASL,KAAKM,UAAUG,OAG/CkB,YAAc,WACZ,IAAMC,EAAiB5B,KAAKC,MAAMC,aAAaC,QAAQ,UACvDvB,EAAKM,SAAS,CAAEgC,MAAOU,yFAIvBpC,KAAK+B,oBACL/B,KAAKmC,+CAGL,OACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACwE,EAAD,CAAS3C,OAAQK,KAAKmC,YAAarD,MAAOkB,KAAKgC,iBAC/CpE,EAAAC,EAAAC,cAACyE,EAAD,CAAUb,MAAO1B,KAAKrB,MAAOgB,OAAQK,KAAKmC,eAE5CvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAnCToC,aCMEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.99d186fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Topbar = () => {\r\n  return (\r\n    <nav className=\"teal darken-1 white-text\">\r\n      <div className=\"nav-wrapper\">\r\n        <a href=\"/\" className=\"brand-logo center hide-on-med-and-down\">\r\n          Grocery Getter\r\n          <i className=\"large material-icons right\">shopping_cart</i>\r\n        </a>\r\n        <a href=\"/\" className=\"brand-logo center hide-on-large-only\">\r\n          GG\r\n          <i className=\"material-icons right\">shopping_cart</i>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import React from \"react\";\r\n\r\nconst TextInput = ({ label, name, type, onChange, value }) => {\r\n  return (\r\n    <div className=\"input-field\">\r\n      <input\r\n        id={name}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <label htmlFor={name}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport TextInput from \"../Layout/TextInput\";\r\nimport uuid from \"uuid\";\r\n\r\nclass AddItem extends Component {\r\n  state = {\r\n    item: \"\",\r\n    price: \"\",\r\n    store: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { item, price, store } = this.state;\r\n    if (item === \"\") {\r\n      this.setState({ error: \"Item is required.\" });\r\n      return;\r\n    }\r\n\r\n    let dollarReg = /^\\d+(?:\\.\\d{0,2})$/;\r\n\r\n    if (!dollarReg.test(price)) {\r\n      this.setState({ error: \"Enter dollar amount.\" });\r\n      return;\r\n    }\r\n\r\n    const newItem = {\r\n      id: uuid(),\r\n      item,\r\n      price,\r\n      store,\r\n      checked: false\r\n    };\r\n\r\n    this.props.store(newItem);\r\n\r\n    this.setState({\r\n      item: \"\",\r\n      price: \"\",\r\n      store: \"\",\r\n      error: \"\"\r\n    });\r\n\r\n    this.props.update();\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { item, price, store, error } = this.state;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-panel\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <h4 className=\"mb\">Add Item</h4>\r\n              <form onSubmit={this.onSubmit.bind(this)}>\r\n                <TextInput\r\n                  label=\"Item\"\r\n                  name=\"item\"\r\n                  type=\"text\"\r\n                  value={item}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextInput\r\n                  label=\"$ Price\"\r\n                  name=\"price\"\r\n                  type=\"text\"\r\n                  value={price}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextInput\r\n                  label=\"Store\"\r\n                  name=\"store\"\r\n                  type=\"text\"\r\n                  value={store}\r\n                  onChange={this.onChange}\r\n                />\r\n                {error && <p className=\"red-text\">{error}</p>}\r\n                <button\r\n                  className=\"right btn waves-effect waves-light teal darken-1\"\r\n                  type=\"submit\"\r\n                  value=\"Add Item\"\r\n                >\r\n                  <i className=\"material-icons\">playlist_add</i>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n  checkItemOff = () => {\r\n    const makeChange = () => {\r\n      const { id } = this.props.item;\r\n      const currentItems = JSON.parse(localStorage.getItem(\"items\"));\r\n      currentItems.forEach(item => {\r\n        if (item.id === id) {\r\n          item.checked = !item.checked;\r\n        }\r\n      });\r\n      localStorage.setItem(\"items\", JSON.stringify(currentItems));\r\n      this.props.update();\r\n    };\r\n    setTimeout(makeChange, 500);\r\n  };\r\n  deleteItem = () => {\r\n    const makeChange = () => {\r\n      const { id } = this.props.item;\r\n      const currentItems = JSON.parse(localStorage.getItem(\"items\"));\r\n      if (currentItems.length === 1) {\r\n        localStorage.setItem(\"items\", \"[]\");\r\n      } else {\r\n        const newItems = currentItems.filter(item => item.id !== id);\r\n        localStorage.setItem(\"items\", JSON.stringify(newItems));\r\n      }\r\n      this.props.update();\r\n    };\r\n    setTimeout(makeChange, 500);\r\n  };\r\n  render() {\r\n    const { item, price, store, checked } = this.props.item;\r\n\r\n    const dollarSign = \"$\",\r\n      dash = \"-\";\r\n\r\n    const priceSection = (\r\n      <p>\r\n        {price && (\r\n          <span>\r\n            {dollarSign}\r\n            {price}\r\n          </span>\r\n        )}{\" \"}\r\n        {store && (\r\n          <em>\r\n            {\" \"}\r\n            {dash} {store}\r\n          </em>\r\n        )}\r\n      </p>\r\n    );\r\n\r\n    const groceryGet = (\r\n      <li className=\"collection-item avatar\">\r\n        <i\r\n          className=\"material-icons circle teal darken-1 point waves-effect waves-light\"\r\n          onClick={this.checkItemOff}\r\n        >\r\n          add_shopping_cart\r\n        </i>\r\n        <span className=\"title grocery-item\">{item}</span>\r\n        {priceSection}\r\n        <span className=\"secondary-content\">\r\n          <i\r\n            className=\"material-icons red-text point\"\r\n            onClick={this.deleteItem}\r\n          >\r\n            cancel\r\n          </i>\r\n        </span>\r\n      </li>\r\n    );\r\n\r\n    const groceryCart = (\r\n      <li className=\"collection-item avatar grey lighten-3\">\r\n        <i\r\n          className=\"material-icons circle grey darken-2 point waves-effect waves-light\"\r\n          onClick={this.checkItemOff}\r\n        >\r\n          remove_shopping_cart\r\n        </i>\r\n        <span className=\"title grocery-item\">\r\n          <s>{item}</s>\r\n        </span>\r\n        {priceSection}\r\n        <span className=\"secondary-content\">\r\n          <i\r\n            className=\"material-icons red-text point\"\r\n            onClick={this.deleteItem}\r\n          >\r\n            cancel\r\n          </i>\r\n        </span>\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>{checked ? groceryCart : groceryGet}</React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nclass ItemList extends Component {\r\n  render() {\r\n    const { items } = this.props.items;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-panel\">\r\n          <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n              <h4 className=\"center-align\">List</h4>\r\n            </li>\r\n            {items &&\r\n              items.map(item => (\r\n                <Item key={item.id} item={item} update={this.props.update} />\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { Component } from \"react\";\nimport Topbar from \"./Layout/Topbar\";\nimport AddItem from \"./Components/AddItem\";\nimport \"./App.css\";\nimport ItemList from \"./Components/ItemList\";\n\nclass App extends Component {\n  state = {};\n\n  buildLocalStorage = () => {\n    const currentItems = JSON.parse(localStorage.getItem(\"items\"));\n    if (!currentItems) {\n      localStorage.setItem(\"items\", \"[]\");\n    }\n  };\n  toLocalStorage = item => {\n    const currentItems = JSON.parse(localStorage.getItem(\"items\"));\n    const newItems = [...currentItems, item];\n    localStorage.setItem(\"items\", JSON.stringify(newItems));\n  };\n\n  updateItems = () => {\n    const retrievedItems = JSON.parse(localStorage.getItem(\"items\"));\n    this.setState({ items: retrievedItems });\n  };\n\n  componentWillMount() {\n    this.buildLocalStorage();\n    this.updateItems();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Topbar />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m2\" />\n            <div className=\"col s12 m8\">\n              <AddItem update={this.updateItems} store={this.toLocalStorage} />\n              <ItemList items={this.state} update={this.updateItems} />\n            </div>\n            <div className=\"col m2\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}